meta:
  title: "Snap Kit: Web Automation & Screenshot API"
  description: "Your ultimate Puppeteer-based toolkit for seamless web automation! Snap Kit empowers developers to capture high-fidelity screenshots, scrape web content with precision, and generate beautiful code snapshots via a powerful, easy-to-use API."
  image: "mediakit://snap-kit-hero-main-visual.png"
sections:
  - sectionName: "hero"
    sectionSummary: "A high-impact hero section designed to immediately convey Snap Kit's core value proposition. It uses a dynamic title and a clear, benefit-oriented description to capture developer interest, paired with a compelling visual and direct calls-to-action to encourage exploration and adoption."
    fullBackgroundHeroImage: "mediakit://snap-kit-hero-main-visual.png"
    fullBackgroundHeroLeftTitle: "Automate the Web, Capture with Precision"
    fullBackgroundHeroLeftDescription: "Welcome to Snap Kit! Your new go-to, Puppeteer-powered API for grabbing pixel-perfect webpage screenshots and scraping web content like a pro. Jump in and see how easy web automation can be!"
    fullBackgroundHeroActions:
      - text: "Explore the Code"
        link: "https://github.com/blocklet/snap-kit"
      - text: "Read the Docs"
        link: "https://github.com/blocklet/snap-kit/blob/master/blocklets/snap-kit/README.md"
  - sectionName: "features"
    sectionSummary: "This section showcases the core features of Snap Kit in a clean, three-column grid. Each feature is presented with an icon and a brief, energetic description, making it easy for developers to quickly scan and understand the key benefits and capabilities of the tool."
    threeColumnGridTitle: "Everything You Need for Web Automation"
    list:
      - sectionName: "featureCard"
        sectionSummary: "Highlights the high-fidelity screenshot capability of Snap Kit."
        iconName: "lucide:image"
        cardTitle: "High-Fidelity Screenshots"
        cardDescription: "Capture pixel-perfect snapshots of any webpage in PNG, JPEG, or WebP. You control the viewport, quality, and can even grab the full page!"
      - sectionName: "featureCard"
        sectionSummary: "Showcases the smart content extraction functionality."
        iconName: "lucide:code-2"
        cardTitle: "Smart Content Extraction"
        cardDescription: "Effortlessly pull HTML content from any URL. Our crawler handles the heavy lifting, so you can focus on extracting the precise data you need."
      - sectionName: "featureCard"
        sectionSummary: "Emphasizes the customization options available for requests."
        iconName: "lucide:settings-2"
        cardTitle: "Full Request Customization"
        cardDescription: "Take full control! Set custom headers, cookies, and even local storage to simulate user sessions and access content behind logins."
  - sectionName: "apiCrawl"
    sectionSummary: "This section provides a detailed, developer-focused look at the `/api/crawl` endpoint. It combines a clear explanation with a practical code example and its corresponding JSON response, making it incredibly easy for developers to understand and implement web crawling."
    contentCardTitle: "Crawl & Extract Content with /api/crawl"
    contentCardDescription: "Point Snap Kit at any URL and let it grab the full HTML content for you. Whether you're doing it in real-time with `sync: true` or firing off a job to check later, extracting web data is now a breeze. You'll get back the content, page title, and description, ready for your app."
    contentCardRightCode:
      name: "POST /api/crawl"
      content: "{\n  \"url\": \"https://example.com\",\n  \"sync\": true,\n  \"cookies\": [\n    {\n      \"name\": \"token\",\n      \"value\": \"user-auth-token\"\n    }\n  ]\n}"
  - sectionName: "apiSnap"
    sectionSummary: "Alternating the layout for visual rhythm, this section details the `/api/snap` endpoint. It clearly explains the screenshot functionality and presents developers with an actionable code snippet and the expected JSON output, demystifying the process of generating web captures."
    contentCardTitle: "Capture Perfect Screenshots with /api/snap"
    contentCardDescription: "Need a high-quality screenshot? The `/api/snap` endpoint is your best friend. Specify the URL, format, and dimensions, and get a perfect capture every time. It's ideal for generating social media previews, visual testing, or archiving web pages."
    contentCardLeftCode:
      name: "POST /api/snap"
      content: "{\n  \"url\": \"https://example.com\",\n  \"format\": \"webp\",\n  \"width\": 1920,\n  \"height\": 1080,\n  \"fullPage\": true,\n  \"sync\": true\n}"
  - sectionName: "apiCarbon"
    sectionSummary: "This section introduces the fun and powerful `/api/carbon` endpoint for creating beautiful code screenshots. It provides a straightforward explanation and a code example, encouraging developers to enhance their documentation, articles, and social media with visually appealing code snippets."
    contentCardTitle: "Generate Stunning Code Shots with /api/carbon"
    contentCardDescription: "Turn your plain code into a work of art! The `/api/carbon` endpoint lets you create gorgeous, shareable images of your code snippets. Just send your code, pick a theme, and let Snap Kit handle the magic. Perfect for tutorials and docs!"
    contentCardRightCode:
      name: "POST /api/carbon"
      content: "{\n  \"code\": \"console.log('Hello, Snap Kit!');\",\n  \"format\": \"png\",\n  \"t\": \"one-dark\",\n  \"sync\": true\n}"
  - sectionName: "gettingStarted"
    sectionSummary: "This section provides practical, copy-pasteable cURL examples to help developers start using the API immediately. It covers key use cases and includes authentication instructions, lowering the barrier to entry and fostering a hands-on learning experience."
    twoColumnGridTitle: "Get Started in Seconds"
    list:
      - sectionName: "exampleCard"
        sectionSummary: "A cURL example for capturing a PNG screenshot."
        contentCardTitle: "Capture a PNG Screenshot"
        contentCardDescription: "A simple request to get a high-quality PNG image of a website. Just swap in your access key and URL!"
        contentCardBottomCode:
          name: "bash"
          content: "curl --request POST \\\n  --url 'https://snap.createblocklet.dev/api/snap' \\\n  --header 'Authorization: Bearer YOUR-ACCESS-KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"url\": \"https://arcblock.io\",\n    \"format\": \"png\",\n    \"sync\": true\n  }'"
      - sectionName: "exampleCard"
        sectionSummary: "A cURL example for generating a code screenshot."
        contentCardTitle: "Generate a Code Screenshot"
        contentCardDescription: "Create a beautiful snapshot of your code. This example uses the 'one-dark' theme."
        contentCardBottomCode:
          name: "bash"
          content: "curl --request POST \\\n  --url 'https://snap.createblocklet.dev/api/carbon' \\\n  --header 'Authorization: Bearer YOUR-ACCESS-KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"code\": \"console.log(\\\"Hello World\\\");\",\n    \"format\": \"jpeg\",\n    \"sync\": true\n  }'"
      - sectionName: "exampleCard"
        sectionSummary: "A cURL example for capturing a JPEG screenshot with quality control."
        contentCardTitle: "Capture a JPEG with Quality Control"
        contentCardDescription: "Need a smaller file? Capture a JPEG and set the quality to find the perfect balance."
        contentCardBottomCode:
          name: "bash"
          content: "curl --request POST \\\n  --url 'https://snap.createblocklet.dev/api/snap' \\\n  --header 'Authorization: Bearer YOUR-ACCESS-KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"url\": \"https://example.com\",\n    \"format\": \"jpeg\",\n    \"quality\": 90,\n    \"sync\": true\n  }'"
      - sectionName: "exampleCard"
        sectionSummary: "A cURL example for retrieving the result of a crawl job."
        contentCardTitle: "Get Crawl Result"
        contentCardDescription: "Check the status and get the data from a previously submitted asynchronous job."
        contentCardBottomCode:
          name: "bash"
          content: "curl --request GET \\\n  --url 'https://snap.createblocklet.dev/api/crawl?jobId=YOUR-JOB-ID' \\\n  --header 'Authorization: Bearer YOUR-ACCESS-KEY'"
  - sectionName: "faq"
    sectionSummary: "This FAQ section proactively answers common developer questions in a clear, accordion-style format. It's designed to resolve potential ambiguities about authentication, image formats, and API behavior, ensuring a smooth and confident onboarding experience."
    faqTitle: "Frequently Asked Questions"
    faqList:
      - question: "What is Snap Kit?"
        answer: "Snap Kit is a powerful, Puppeteer-based service that makes web automation a blast! You can use its simple API to capture high-quality webpage screenshots, scrape web content for data, and even generate beautiful images of your code."
      - question: "How does authentication work?"
        answer: "It's super easy! All you need is an access key. Just include it in your request header as a Bearer token, like this: `Authorization: Bearer YOUR-ACCESS-KEY`. That's it, you're in!"
      - question: "What image formats does /api/snap support?"
        answer: "You've got options! The `/api/snap` endpoint supports modern `webp` (the default), lossless `png` for crisp graphics, and `jpeg` for when you need to control the file size with the `quality` parameter."
      - question: "What's the difference between sync and async requests?"
        answer: "Great question! Set `sync: true` if you want to wait for the job to complete and get the result in the same response. If you're firing off a big job or don't want to wait, use `sync: false` (the default) to get a `jobId` instantly. You can then use that ID to check the result later."
      - question: "Can I crawl pages that require a login?"
        answer: "Absolutely! You can pass `cookies` and `localStorage` data in your request body. This allows you to simulate an authenticated user session, so you can easily access and automate content that's behind a login wall."
  - sectionName: "cta"
    sectionSummary: "This final, energetic CTA section serves as a powerful concluding invitation. It reinforces the excitement of using Snap Kit and provides two clear, compelling next steps—diving into the code or documentation—to convert interested developers into active users."
    ctaTitle: "Ready to Start Automating?"
    ctaDescription: "Jump into the code, explore the documentation, and see how Snap Kit can supercharge your web automation workflows. Let's build something amazing together!"
    ctaImage: "mediakit://1.jpeg"
    cta:
      - text: "View on GitHub"
        link: "https://github.com/blocklet/snap-kit"
      - text: "Read the Docs"
        link: "https://github.com/blocklet/snap-kit/blob/master/blocklets/snap-kit/README.md"
